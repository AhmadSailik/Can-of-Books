{"ast":null,"code":"var _jsxFileName = \"/home/ahmadsailik/ASAC/301/Can-of-Books/src/myFavoriteBooks.js\";\nimport React from 'react';\nimport BestBooks from './BestBooks';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport AddForm from './AddForm';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport { Carousel, Container, Row, Col, CardColumns, Card, Button, Form, Modal } from 'react-bootstrap';\nimport UpdateForm from './UpdateForm';\nimport ShowResult from './ShowResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      showUpdate: false,\n      showAddMod: false,\n      close: true,\n      index: 0,\n      REname: '',\n      Redescription: '',\n      status: ''\n    };\n\n    this.addBook = async event => {\n      event.preventDefault();\n      const {\n        user\n      } = this.props.auth0;\n      const bookObj = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        email: user.email,\n        status: this.state.status\n      };\n      const newBook = await axios.post(`http://localhost:3001/addBook`, bookObj);\n      console.log(bookObj);\n      console.log(newBook.data);\n      this.setState({\n        data: newBook.data\n      });\n    };\n\n    this.openAddModal = () => {\n      this.setState({\n        showAddMod: true\n      });\n    };\n\n    this.AddcloseModal = () => {\n      this.setState({\n        showAddMod: false\n      });\n    };\n\n    this.deletFunction = async index => {\n      const {\n        user\n      } = this.props.auth0;\n      const ownerEmail = {\n        email: user.email\n      };\n      let newBookAfterdelet = await axios.delete(`http://localhost:3001/deletebook/${index}`, {\n        params: ownerEmail\n      });\n      this.setState({\n        data: newBookAfterdelet.data\n      });\n    };\n\n    this.updateShowModal = index => {\n      this.setState({\n        showUpdate: true,\n        index: index,\n        REname: this.state.data[index].name,\n        Redescription: this.state.data[index].description\n      });\n    };\n\n    this.updatecloseModal = () => {\n      this.setState({\n        showUpdate: false\n      });\n    };\n\n    this.udateBookProp = async event => {\n      event.preventDefault();\n      const {\n        user\n      } = this.props.auth0;\n      const update = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        email: user.email,\n        status: this.state.status\n      };\n      console.log(update);\n      const updateBook = await axios.put(`http://localhost:3001/updateBook/${this.state.index}`, update);\n      console.log(updateBook.data);\n      this.setState({\n        data: updateBook.data,\n        showUpdate: false\n      });\n    };\n\n    this.updateName = event => {\n      this.setState({\n        REname: event.target.name.value\n      });\n    };\n\n    this.updateDescription = event => {\n      this.setState({\n        Redescription: event.target.name.value\n      });\n    };\n\n    this.UpdateSelectionStatus = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props.auth0;\n\n    try {\n      const bookURL = await fetch(`http://localhost:3001/books?email=${user.email}`);\n      const resultOfBookURl = await bookURL.json();\n      this.setState({\n        data: resultOfBookURl\n      });\n    } catch {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                marginLeft: '1.5rem'\n              },\n              children: \"My Favorite Books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a collection of my favorite books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: this.openAddModal,\n              style: {\n                marginBottom: '1rem',\n                width: '30rem',\n                marginLeft: '1.5rem'\n              },\n              children: \"Add Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n              show: this.state.showUpdate,\n              updatecloseModal: this.updatecloseModal,\n              udateBookProp: this.udateBookProp,\n              updateName: this.updateName,\n              REname: this.state.REname,\n              updateDescription: this.updateDescription,\n              Redescription: this.state.Redescription,\n              UpdateSelectionStatus: this.UpdateSelectionStatus,\n              udateBookProp: this.udateBookProp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n              show: this.state.showAddMod,\n              AddcloseModal: this.AddcloseModal,\n              UpdateSelectionStatus: this.UpdateSelectionStatus,\n              addBookProp: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n              children: /*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: this.state.data.map((item, idx) => {\n                    return /*#__PURE__*/_jsxDEV(ShowResult, {\n                      name: item.name,\n                      description: item.description,\n                      deletFunction: this.deletFunction,\n                      updateShowModal: this.updateShowModal,\n                      status: item.status,\n                      idx: idx\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 13\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withAuth0(MyFavoriteBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/ahmadsailik/ASAC/301/Can-of-Books/src/myFavoriteBooks.js"],"names":["React","BestBooks","Jumbotron","AddForm","axios","withAuth0","Carousel","Container","Row","Col","CardColumns","Card","Button","Form","Modal","UpdateForm","ShowResult","MyFavoriteBooks","Component","state","data","showUpdate","showAddMod","close","index","REname","Redescription","status","addBook","event","preventDefault","user","props","auth0","bookObj","name","target","value","description","email","newBook","post","console","log","setState","openAddModal","AddcloseModal","deletFunction","ownerEmail","newBookAfterdelet","delete","params","updateShowModal","updatecloseModal","udateBookProp","update","updateBook","put","updateName","updateDescription","UpdateSelectionStatus","componentDidMount","bookURL","fetch","resultOfBookURl","json","render","marginLeft","marginBottom","width","map","item","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BestBooks from './BestBooks';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport AddForm from './AddForm';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport { Carousel, Container, Row, Col, CardColumns, Card, Button, Form, Modal } from 'react-bootstrap';\nimport UpdateForm from './UpdateForm';\nimport ShowResult from './ShowResult';\n\nclass MyFavoriteBooks extends React.Component {\n  state = {\n    data: [],\n    showUpdate: false,\n    showAddMod:false,\n    close: true,\n    index: 0,\n    REname: '',\n    Redescription: '',\n    status:''\n\n  }\n  async componentDidMount() {\n    const { user } = this.props.auth0;\n    try {\n      const bookURL = await fetch(`http://localhost:3001/books?email=${user.email}`)\n      const resultOfBookURl = await bookURL.json();\n      this.setState({\n        data: resultOfBookURl\n      })\n    } catch {\n\n    }\n  };\n\n  addBook = async (event) => {\n    event.preventDefault();\n    const { user } = this.props.auth0;\n    const bookObj = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      email: user.email,\n      status:this.state.status\n    }\n    const newBook = await axios.post(`http://localhost:3001/addBook`, bookObj)\n    console.log(bookObj);\n    console.log(newBook.data);\n    this.setState({\n      data: newBook.data\n\n    })\n\n  };\n  openAddModal=()=>{\n    this.setState({\n      showAddMod: true\n    })\n  }\n  AddcloseModal=()=>{\n    this.setState({\n      showAddMod: false\n    })\n  }\n\n  deletFunction = async (index) => {\n    const { user } = this.props.auth0;\n    const ownerEmail = {\n      email: user.email\n    }\n    let newBookAfterdelet = await axios.delete(`http://localhost:3001/deletebook/${index}`, { params: ownerEmail })\n    this.setState({\n      data: newBookAfterdelet.data\n    })\n  }\n  updateShowModal = (index) => {\n    this.setState({\n      showUpdate: true,\n      index: index,\n      REname: this.state.data[index].name,\n      Redescription: this.state.data[index].description,\n\n    })\n  }\n  updatecloseModal = () => {\n    this.setState({\n      showUpdate: false\n    })\n  }\n  udateBookProp = async (event) => {\n    event.preventDefault();\n\n    const { user } = this.props.auth0;\n    const update = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      email: user.email,\n      status:this.state.status,\n    }\n    console.log(update)\n    const updateBook = await axios.put(`http://localhost:3001/updateBook/${this.state.index}`, update)\n    console.log(updateBook.data)\n    this.setState({\n      data: updateBook.data,\n      showUpdate: false\n    })\n  }\n  updateName = (event) => {\n    this.setState({\n      REname: event.target.name.value,\n    })\n  }\n  updateDescription = (event) => {\n    this.setState({\n      Redescription: event.target.name.value,\n    })\n  }\n  UpdateSelectionStatus=(event)=>{\n    this.setState({\n      status: event.target.value,\n    })\n  }\n\n  render() {\n\n\n    return (\n      <div >\n        <Container>\n        <Row>\n          <Col>\n        <h1 style={{marginLeft:'1.5rem'}}>My Favorite Books</h1>\n        <p>This is a collection of my favorite books</p>\n        <Button variant=\"primary\" onClick={this.openAddModal} style={{marginBottom:'1rem',width:'30rem',marginLeft:'1.5rem'}}>Add Book</Button>\n        <UpdateForm\n        show={this.state.showUpdate}\n        updatecloseModal={this.updatecloseModal}\n        udateBookProp={this.udateBookProp}\n        updateName={this.updateName}\n        REname={this.state.REname}\n        updateDescription={this.updateDescription}\n        Redescription={this.state.Redescription}\n        UpdateSelectionStatus={this.UpdateSelectionStatus}\n        udateBookProp={this.udateBookProp}\n        />\n\n        <AddForm\n          show={this.state.showAddMod}\n          AddcloseModal={this.AddcloseModal}\n          UpdateSelectionStatus={this.UpdateSelectionStatus}\n          addBookProp={this.addBook}\n        />\n\n<CardColumns>\n        <Container>\n          <Row>\n        {this.state.data.map((item, idx) => {\n          return (\n            <ShowResult\n            name={item.name}\n            description={item.description}\n            deletFunction={this.deletFunction}\n            updateShowModal={this.updateShowModal}\n            status={item.status}\n            idx={idx}\n            />\n          )\n        })}\n        </Row>\n        </Container>\n</CardColumns>\n</Col>     \n</Row>   \n</Container> \n      </div>\n\n    )\n  }\n}\n\nexport default withAuth0(MyFavoriteBooks);\n"]},"metadata":{},"sourceType":"module"}